// <auto-generated />
using System;
using ForgettingCurve.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ForgettingCurve.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ForgettingCurve.Domain.Entities.Repetition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RepetitionId");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IntervalDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("ScheduledDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ScheduledDate")
                        .HasDatabaseName("IX_Repetitions_ScheduledDate_NotCompleted")
                        .HasFilter("[CompletedDate] IS NULL");

                    b.HasIndex("TopicId");

                    b.HasIndex("TopicId", "CompletedDate")
                        .HasDatabaseName("IX_Repetitions_TopicId_CompletedDate_Desc")
                        .HasFilter("[CompletedDate] IS NOT NULL");

                    b.ToTable("Repetitions", (string)null);
                });

            modelBuilder.Entity("ForgettingCurve.Domain.Entities.Scope", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ScopeId");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("OwnerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreationDate");

                    b.HasIndex("Name");

                    b.HasIndex("OwnerUserId");

                    b.ToTable("Scopes", (string)null);
                });

            modelBuilder.Entity("ForgettingCurve.Domain.Entities.Topic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TopicId");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsMastered")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Notes")
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<Guid>("OwnerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ScopeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IsMastered");

                    b.HasIndex("OwnerUserId");

                    b.HasIndex("ScopeId");

                    b.ToTable("Topics", (string)null);
                });

            modelBuilder.Entity("ForgettingCurve.Domain.Entities.Repetition", b =>
                {
                    b.HasOne("ForgettingCurve.Domain.Entities.Topic", "Topic")
                        .WithMany("Repetitions")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("ForgettingCurve.Domain.Entities.Topic", b =>
                {
                    b.HasOne("ForgettingCurve.Domain.Entities.Scope", "Scope")
                        .WithMany("Topics")
                        .HasForeignKey("ScopeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scope");
                });

            modelBuilder.Entity("ForgettingCurve.Domain.Entities.Scope", b =>
                {
                    b.Navigation("Topics");
                });

            modelBuilder.Entity("ForgettingCurve.Domain.Entities.Topic", b =>
                {
                    b.Navigation("Repetitions");
                });
#pragma warning restore 612, 618
        }
    }
}
